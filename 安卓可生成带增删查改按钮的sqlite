//SQLiteActivity.java
com.db.testSQLite;
 
import com.db.testSQLiteDb.StuDBHelper;
 
import android.app.Activity;
import android.content.ContentValues;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.os.Bundle;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;

public class SQLiteActivity extends Activity {
// Called when the activity is first created. 
private Button createBtn;
private Button insertBtn;
private Button updateBtn;
private Button queryBtn;
private Button deleteBtn;
private Button ModifyBtn;
@Override
public void onCreate(Bundle savedInstanceState) {
super.onCreate(savedInstanceState);
setContentView(R.layout.main);
 
//调用creatVie()
creatView();
//setListener方法
setListener();
}
 
//通过findViewById获得Button对象的方法
private void creatView(){
createBtn = (Button)findViewById(R.id.createDatabase);
updateBtn = (Button)findViewById(R.id.updateDatabase);
insertBtn = (Button)findViewById(R.id.insert);
ModifyBtn = (Button)findViewById(R.id.update);
queryBtn = (Button)findViewById(R.id.query);
deleteBtn = (Button)findViewById(R.id.delete);
}
 
//为按钮注册监听的方法
private void setListener(){
createBtn.setOnClickListener(new CreateListener());
updateBtn.setOnClickListener(new UpdateListener());
insertBtn.setOnClickListener(new InsertListener());
ModifyBtn.setOnClickListener(new ModifyListener());
queryBtn.setOnClickListener(new QueryListener());
deleteBtn.setOnClickListener(new DeleteListener());

//StuDBHelper.java
package com.db.testSQLiteDb; 
   
import android.content.Context; 
import android.database.sqlite.SQLiteDatabase; 
import android.database.sqlite.SQLiteDatabase.CursorFactory; 
import android.database.sqlite.SQLiteOpenHelper; 
import android.util.Log; 
   
public class StuDBHelper extends SQLiteOpenHelper { 
   
private static final String TAG = "TestSQLite"; 
public static final int VERSION = 1; 
   
//必须要有构造函数 
public StuDBHelper(Context context, String name, CursorFactory factory, 
int version) { 
super(context, name, factory, version); 
} 
   
// 当第一次创建数据库的时候，调用该方法  
public void onCreate(SQLiteDatabase db) { 
String sql = "create table stu_table(id int,sname varchar(20),sage int,ssex varchar(10))"; 
//输出创建数据库的日志信息 
Log.i(TAG, "create Database------------->"); 
//execSQL函数用于执行SQL语句 
db.execSQL(sql); 
} 
   
//当更新数据库的时候执行该方法 
public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) { 
//输出更新数据库的日志信息 
Log.i(TAG, "update Database------------->"); 
} 
}
//main.xml
<?xml version="1.0" encoding="utf-8"?> 
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android" 
android:orientation="vertical" 
android:layout_width="fill_parent" 
android:layout_height="fill_parent" 
> 
<TextView  
android:layout_width="fill_parent"  
android:layout_height="wrap_content"  
android:text="@string/hello" 
/> 
<Button 
android:id="@+id/createDatabase" 
android:layout_width="fill_parent"  
android:layout_height="wrap_content"  
android:text="创建数据库" 
/>  
<Button 
android:id="@+id/updateDatabase" 
android:layout_width="fill_parent"  
android:layout_height="wrap_content"  
android:text="更新数据库" 
/>  
<Button 
android:id="@+id/insert" 
android:layout_width="fill_parent"  
android:layout_height="wrap_content"  
android:text="插入数据" 
/> 
<Button 
android:id="@+id/update" 
android:layout_width="fill_parent"  
android:layout_height="wrap_content"  
android:text="更新数据" 
/> 
<Button 
android:id="@+id/query" 
android:layout_width="fill_parent"  
android:layout_height="wrap_content"  
android:text="查询数据" 
/> 
<Button 
android:id="@+id/delete" 
android:layout_width="fill_parent"  
android:layout_height="wrap_content"  
android:text="删除数据" 
/> 
</LinearLayout>


